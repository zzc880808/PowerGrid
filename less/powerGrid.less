@grid-columns: 12;		/* Total column count */
@grid-gap: 20px;		/* The gap width */

.power-grid {
	.pg-col-inner {
		position: relative;
		display: block;
		overflow: hidden;
		margin-left: (@grid-gap / 2);
		margin-right: (@grid-gap / 2);
		min-height: 1px;
	}
	.fn-clearfix();
	.fn-make-pg-row();
	.fn-make-pg-cols(s1);
}

.fn-make-pg-row () {
	.pg-row { 
		position: relative;
		display: block;
		margin-left: (@grid-gap / -2);
		margin-right: (@grid-gap / -2);
		.fn-clearfix();
	}
}

.fn-make-pg-cols (@type) {
	.fn-make-pg-cols(@grid-columns, @type, l);
	.fn-make-pg-cols(@grid-columns, @type, r);
}

.fn-make-pg-cols (@count, @type, @style) when (@count > 0) {
	.fn-make-pg-col (@count, @type, @style);
	.fn-make-pg-cols (@count - 1, @type, @style);
}

.fn-make-pg-col (@count, @type, @style) when (@style = l) {
	.pg-col-@{type}-@{style}@{count} { float: left; }
}

.fn-make-pg-col (@count, @type, @style) when (@style = r) {
	.pg-col-@{type}-@{style}@{count} { float: right; }
}

.fn-make-pg-col (@count, @type, @style) when (@count > 0) {
	.pg-col-@{type}-@{style}@{count} {
		position: relative;
		display: block;
		width: percentage(@count / @grid-columns);
	}
}

.fn-clearfix () {
	*zoom: 1;
	height: 1%;
	&:before, &:after {
		content: ".";
		display: block;
		clear: both;
		visibility: hidden;
		line-height: 0;
		height: 0;
		font-size: 0;
	}
}

